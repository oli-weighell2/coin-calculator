{
  "name": "npm-sass",
  "version": "0.2.1",
  "description": "sass compilation with npm aware include paths",
  "main": "index.js",
  "bin": {
    "npm-sass": "./bin/npm-sass"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lennym/npm-sass.git"
  },
  "author": {
    "name": "lennym",
    "email": "hello@lennym.co.uk"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/lennym/npm-sass/issues"
  },
  "homepage": "https://github.com/lennym/npm-sass",
  "dependencies": {
    "argh": "^0.1.4",
    "camelify": "0.0.2",
    "lodash": "^3.10.1",
    "node-sass": "^3.2.0"
  },
  "readme": "# npm sass\n\nCompile sass files with installed node modules automatically included in the the includePaths.\n\nBecause of the way npm installs modules in a nested tree structure, there is no reliable way to ensure the location of locally installed dependencies. In particular - modules are not necessarily installed into ./node_modules. This causes trouble when trying to use npm dependencies in sass files where `--includePath ./node_modules` can fail unexpectedly if a dependency is shared with an ancestor (and so installed further up the tree).\n\nThis module will automatically allow access to all locally installed npm modules, irrespective of their install location.\n\n## Install\n\n```\nnpm install npm-sass [-g]\n```\n\n## Usage\n\nFrom the command line:\n\n```\nnpm-sass ./assets/styles/app.scss > ./public/css/output.css\n```\n\nProgrammatically:\n\n```javascript\nrequire('npm-sass')('./assets/sass/app.scss', function (err, result) {\n    ...\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "npm-sass@0.2.1",
  "_shasum": "b09e7a5c0b6110d43cfa49aaa327ec6e415e162e",
  "_resolved": "https://registry.npmjs.org/npm-sass/-/npm-sass-0.2.1.tgz",
  "_from": "npm-sass@>=0.2.1 <0.3.0"
}
