{
  "name": "i18n-lookup",
  "version": "0.1.0",
  "description": "Utility node module for doing lookups from translation documents",
  "main": "index.js",
  "scripts": {
    "test": "npm run lint && npm run unit",
    "lint": "eslint .",
    "unit": "mocha test/. --require ./test/helper.js --recursive"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/UKHomeOffice/i18n-lookup.git"
  },
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/UKHomeOffice/i18n-lookup/issues"
  },
  "homepage": "https://github.com/UKHomeOffice/i18n-lookup",
  "dependencies": {
    "underscore": "^1.8.2"
  },
  "devDependencies": {
    "chai": "^2.1.1",
    "eslint": "^0.16.2",
    "mocha": "^2.2.1"
  },
  "readme": "# i18n-lookup\nUtility node module for doing lookups from translation documents\n\n## Install\n\n```\nnpm install [--save] i18n-lookup\n```\n\n## Usage\n\nA lookup function is returned by passing in the translation method as an argument. We normally use [i18next](https://www.npmjs.com/package/i18next).\n\n```javascript\n/**\nLocale: {\n    another: {\n        translation: {\n            key: 'Text'\n        }\n    }\n}\n**/\nvar t = require('i18next').t;\n\nvar lookup = require('i18n-lookup')(t);\n\nvar translated = lookup([\n    'a.translation.key',\n    'another.translation.key'\n]);\n\nconsole.log(translated);\n// This will output the first key which has a corresponding translation defined.\n// => \"Text\"\n```\n\nAdditionally, a template compilation method can be provided for cases where the translated key also includes template syntax.\n\n```javascript\n/**\nLocale: {\n    greeting: 'Hello {{name}}'\n}\n**/\nvar t = require('i18next').t,\n    Mustache = require('mustache');\n\nvar lookup = require('i18n-lookup')(t, Mustache.render);\n\nvar translated = lookup([\n    'greeting'\n], {\n    name: 'John'\n});\n\nconsole.log(translated);\n// This will output the returned lookup compiled with the provided context\n// \"Hello John\"\n```\n",
  "readmeFilename": "README.md",
  "_id": "i18n-lookup@0.1.0",
  "_shasum": "ddd7df672263c8b8e87803ac6729d53569fdea8d",
  "_resolved": "https://registry.npmjs.org/i18n-lookup/-/i18n-lookup-0.1.0.tgz",
  "_from": "i18n-lookup@>=0.1.0 <0.2.0"
}
